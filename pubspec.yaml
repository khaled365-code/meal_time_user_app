name: new_meal_time_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.3

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  flutter_localizations:
    sdk: flutter

  #A powerful HTTP networking package, supports Interceptors, Aborting and canceling a request, Custom adapters, Transformers, etc
  dio: ^5.5.0+1

  #A flutter plugin for adapting screen and font size.Guaranteed to look good on different models
  flutter_screenutil: ^5.9.3


  #Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern. Built to be used with the bloc state management package
  flutter_bloc: ^8.1.6

  #Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android
  shared_preferences: ^2.2.3

  #Functional Programming in Dart. Purify your Dart code using efficient immutable data structures, monads, lenses and other FP tools
  dartz: ^0.10.1

  #A collection of loading indicators animated with flutter
  flutter_spinkit: ^5.2.1

  #Toast Library for Flutter, Easily create toast messages in single line of code
  fluttertoast: ^8.2.6

  #Flutter library to load and cache network images. Can also be used with placeholder and error widgets.
  cached_network_image: ^3.3.1

  #A package provides an easy way to add shimmer effect in Flutter project
  shimmer: ^3.0.0

  #Customize Flutter's default white native splash screen with background color and splash image. Supports dark mode, full screen, and more
  flutter_native_splash: ^2.4.1

  #This small library helps you to decode Json Web Tokens, you can also know if a JWT is already expired
  jwt_decoder: ^2.0.1



  #Flutter plugin for selecting images from the Android and iOS image library, and taking new pictures with the camera
  image_picker: ^1.1.2

  #An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files.
  flutter_svg: ^2.0.10+1

  #Dotted line decoration is handly package to draw dotted divider, dotted border for rectangle, circle or rounded rectangle
  dotted_decoration: ^2.0.0

  #A simple (but correct) dart class for validating email addresses
  email_validator: ^3.0.0


  #A carousel slider widget, support infinite scroll and custom child widget
  carousel_slider_plus: ^6.0.0


  #Provides a collection of Flutter grids layouts (staggered, masonry, quilted, woven, etc.)
  flutter_staggered_grid_view: ^0.7.0

  #Flutter plugin for getting commonly used locations on host platform file systems, such as the temp and app data directories
  path_provider: ^2.1.3


  #The package provides TextInputFormatter for TextField and TextFormField which format the input by a given mask.
  mask_text_input_formatter: ^2.9.0


  #Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the concrete implementation from everywhere in your App"
  get_it: ^7.7.0


  #Render After Effects animations natively on Flutter. This package is a pure Dart implementation of a Lottie player.
  lottie: ^3.1.2

  #A cross platform plugin for displaying and scheduling local notifications for Flutter applications with the ability to customise for each platform.
  flutter_local_notifications: ^17.2.2

  #Flutter plugin for Firebase Cloud Messaging, a cross-platform messaging solution that lets you reliably deliver messages on Android and iOS.
  firebase_messaging: ^15.1.0

  #Flutter plugin for Firebase Core, enabling connecting to multiple Firebase apps.
  firebase_core: ^3.4.0

  #A composable, multi-platform, Future-based API for HTTP requests.#http#network#protocols
  http: ^1.2.2

  #A flutter plugin for getting the local timezone of the device.
  flutter_timezone: ^3.0.0

  #Time zone database and time zone aware DateTime.
  timezone: ^0.9.4

  #Generic cache manager for flutter. Saves web files on the storages of the device and saves the cache info using sqflite.
  flutter_cache_manager: ^3.4.1

  #Lightweight and blazing fast key-value database written in pure Dart. Strongly encrypted using AES-256.
  hive: ^2.2.3

  #A Dart package that helps to implement value based equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.5

  #A package for creating badges. Badges can be used for an additional marker for any widget, e.g. show a number of items in a shopping cart.
  badges: ^3.1.2

  #The Font Awesome Icon pack available as Flutter Icons. Provides 2000 additional icons to use in your apps.
  font_awesome_flutter: ^10.7.0

  #Extension for Hive. Makes it easier to use Hive in Flutter apps.
  hive_flutter: ^1.1.0

  #A Flutter implementation of slidable list item with directional slide actions that can be dismissed.
  flutter_slidable: ^3.1.1

  #Cross-platform plugin for easy access to device's location in real-time
  location: ^7.0.0


  #Flutter Workmanager. This plugin allows you to schedule background work on Android and iOS.
  workmanager: ^0.5.2


  #A library designed for seamless internet connectivity checks. This library enables you to verify your internet connection
  internet_connection_checker: ^1.0.0+1


  #A Flutter package to check your internet connection with subsecond response times, even on mobile networks!
  internet_connection_checker_plus: ^2.5.2


  #Approximate how your Flutter app looks and performs on another device.
  device_preview: ^1.2.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0
  hive_generator: ^2.0.1
  build_runner: ^2.4.12

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
      - assets/images/
      - assets/icons/
      - assets/gif/
      - assets/lotties/
      - assets/sounds/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: sen
      fonts:
        - asset: assets/fonts/Sen-Regular.ttf
        - asset: assets/fonts/Sen-Bold.ttf
          weight: 700
        - asset: assets/fonts/Sen-ExtraBold.ttf
          weight: 800
        - asset: assets/fonts/Sen-Medium.ttf
          weight: 500
        - asset: assets/fonts/Sen-SemiBold.ttf
          weight: 600

    - family: poppins
      fonts:
        - asset: assets/fonts/Poppins-Regular.ttf
        - asset: assets/fonts/Poppins-Medium.ttf
          weight: 500
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
